#!/bin/sh
# ----------------------------------------------------------------------
# This custom script runs the dotnet package vulnerability tool which
# does not (always?) return a non-zero (aka fail) when there are
# vulnerabilities found.  So this script parses the output and
# fails if the no-vulnerabilities text does not appear in the
# output.  If it does fail it also reruns the command so that the
# output is seen.
# ----------------------------------------------------------------------

# Exit script on any errors
set -e

# Dotnet restore
echo "DOTNET RESTORING PROJECT..."
dotnet restore

# Use the dotnet package scanner and pass through any arguments
run_command="dotnet list package --vulnerable --include-transitive $@"

echo "RUNNING [${run_command} ] AND SCANNING OUTPUT WHICH WILL NOT BE SEEN..."
$run_command | grep -q 'has no vulnerable packages given the current sources' && passed=true
echo "...Passed=[${passed}]"
if [ ! -z ${passed} ]; then
  echo "RUN PASSED"
  run_return_code=0
else
  run_return_code=86
  echo "RUN FAILED!!! - RE-RUNNING [${run_command} ] WITH OUTPUT..."
  set +e
  $run_command
  rc=$?
  set -e
  echo ''
  echo "RE-RUN RETURN CODE [${rc}]..."
fi

echo "EXITING WITH RUN RETURN CODE [${run_return_code}]"
exit $run_return_code
