name: Build and Vet

on:
  pull_request:
    branches:
      - main

jobs:

  # --- Image Names ---

  image-names:
    name: PR (Branch) Image Names
    uses: brianjbayer/actions-image-cicd/.github/workflows/image_names.yml@v0.2.2
    with:
      image_base_name: brianjbayer/samplecsharpxunitselenium
      add_branch_name: true

  # --- Build and Push Images ---

  buildx-and-push-dev-image:
    name: Build Development Image
    needs:
      - image-names
    uses: brianjbayer/actions-image-cicd/.github/workflows/buildx_push_image.yml@v0.2.2
    with:
      image: ${{ needs.image-names.outputs.dev_image }}
      platforms: "linux/amd64,linux/arm64"
      buildopts: --target devenv
    secrets:
      registry_u: ${{ secrets.DOCKER_HUB_USERNAME }}
      registry_p: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

  buildx-and-push-unvetted-image:
    name: Build Deployment (Unvetted) Image
    needs:
      - image-names
    uses: brianjbayer/actions-image-cicd/.github/workflows/buildx_push_image.yml@v0.2.2
    with:
      image: ${{ needs.image-names.outputs.unvetted_image }}
      platforms: "linux/amd64,linux/arm64"
    secrets:
      registry_u: ${{ secrets.DOCKER_HUB_USERNAME }}
      registry_p: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

# --- Vet Images ---

  vet-lint-and-dependency-security:
    name: Vet Code Quality
    needs:
      - image-names
      - buildx-and-push-dev-image
    uses: brianjbayer/actions-image-cicd/.github/workflows/vet_code_standards.yml@v0.2.2
    with:
      lint_command: "BROWSERTESTS_IMAGE=${{ needs.image-names.outputs.dev_image }} ./SampleCSharpXunitSelenium/script/dockercomposerun -do ./SampleCSharpXunitSelenium/script/run lint"
      dependency_security_command: "BROWSERTESTS_IMAGE=${{ needs.image-names.outputs.dev_image }} ./SampleCSharpXunitSelenium/script/dockercomposerun -do ./SampleCSharpXunitSelenium/script/run secscan"

  # - End-to-End Tests -
  vet-e2e-tests-deployment:
    name: Vet End-to-End Tests (Deployment Image)
    needs:
      - image-names
      - buildx-and-push-unvetted-image
    uses: ./.github/workflows/run_e2e_tests.yml
    with:
      e2e_tests_image: ${{ needs.image-names.outputs.unvetted_image }}
      e2e_tests_command: "./SampleCSharpXunitSelenium/script/dockercomposerun -c"
    secrets:
      valid_login_user: ${{ secrets.ValidLoginUser }}
      valid_login_password: ${{ secrets.ValidLoginPass }}

  # End-to-End Tests (Dev Image)
  run-e2e-tests-development:
    name: Run End-to-End Tests (Development Image)
    needs:
      - image-names
      - buildx-and-push-dev-image
    uses: ./.github/workflows/run_e2e_tests.yml
    with:
      e2e_tests_image: ${{ needs.image-names.outputs.dev_image }}
      e2e_tests_command: "./SampleCSharpXunitSelenium/script/dockercomposerun -d ./SampleCSharpXunitSelenium/script/run tests"
    secrets:
      valid_login_user: ${{ secrets.ValidLoginUser }}
      valid_login_password: ${{ secrets.ValidLoginPass }}

  # --- Promote Vetted Image If It Passes ---

  copy-branch-vetted-deploy-image:
    name: Promote Vetted Deployment Image
    needs:
      - image-names
      - vet-lint-and-dependency-security
      - vet-e2e-tests-deployment
    uses: brianjbayer/actions-image-cicd/.github/workflows/copy_image.yml@v0.2.2
    with:
      source_image: ${{ needs.image-names.outputs.unvetted_image }}
      target_image: ${{ needs.image-names.outputs.vetted_image }}
    secrets:
      registry_u: ${{ secrets.DOCKER_HUB_USERNAME }}
      registry_p: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
